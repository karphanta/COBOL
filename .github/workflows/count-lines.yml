name: Análisis COBOL

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  analizar-cobol:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout del código
      uses: actions/checkout@v4

    - name: Analizar archivos COBOL
      run: |
        #!/bin/bash

        mkdir -p line-counts

        # Función para contar líneas por división y sub-sección COBOL
        count_cobol_sections() {
          local file="$1"

          awk '
            BEGIN {
              division = ""
              subsection = ""
              id = env = data = proc = 0
              ws = file_sec = linkage = 0
            }
            {
              line = toupper($0)
              sub(/^[ \t]+/, "", line)

              if (line ~ /^IDENTIFICATION DIVISION\.?/) { division = "ID"; subsection = ""; next }
              if (line ~ /^ENVIRONMENT DIVISION\.?/)    { division = "ENV"; subsection = ""; next }
              if (line ~ /^DATA DIVISION\.?/)           { division = "DATA"; subsection = ""; next }
              if (line ~ /^PROCEDURE DIVISION\.?/)      { division = "PROC"; subsection = ""; next }

              if (division == "DATA") {
                if (line ~ /^WORKING-STORAGE SECTION\.?/) { subsection = "WS"; next }
                if (line ~ /^FILE SECTION\.?/)            { subsection = "FILE"; next }
                if (line ~ /^LINKAGE SECTION\.?/)         { subsection = "LINKAGE"; next }
              }

              if (division == "ID")   { id++ }
              else if (division == "ENV")  { env++ }
              else if (division == "DATA") { 
                data++
                if (subsection == "WS")      { ws++ }
                else if (subsection == "FILE")    { file_sec++ }
                else if (subsection == "LINKAGE") { linkage++ }
              }
              else if (division == "PROC") { proc++ }
            }
            END {
              print "=== SECCIONES DE " FILENAME " ==="
              print "IDENTIFICATION DIVISION: " id " líneas"
              print "ENVIRONMENT DIVISION: " env " líneas"
              print "DATA DIVISION: " data " líneas"
              print "  - WORKING-STORAGE SECTION: " ws " líneas"
              print "  - FILE SECTION: " file_sec " líneas"
              print "  - LINKAGE SECTION: " linkage " líneas"
              print "PROCEDURE DIVISION: " proc " líneas"
              print ""
            }
          ' "$file"
        }

        # Función para contar líneas generales
        count_lines() {
          local file="$1"
          local total_lines=$(wc -l < "$file")
          local blank_lines=$(grep -c '^\s*$' "$file")
          local comment_lines=$(grep -c '^......\*' "$file")
          local code_lines=$((total_lines - blank_lines - comment_lines))

          echo "=== ESTADÍSTICAS DE $file ==="
          echo "Líneas totales: $total_lines"
          echo "Líneas de código: $code_lines"
          echo "Líneas en blanco: $blank_lines"
          echo "Líneas de comentarios: $comment_lines"
          echo "Fecha de análisis: $(date)"
          echo ""
        }

        # 🆕 Función para contar y listar COPYs
        count_copys() {
          local file="$1"
          echo "=== COPYs en $file ==="
          # Buscar COPY ignorando mayúsculas, quitar comentarios y extraer nombre
          local copies=$(grep -i '^[ \t]*COPY[ \t]\+' "$file" | grep -v '^\*' | awk '{print $2}' | sort -u)
          if [ -z "$copies" ]; then
            echo "No se encontraron COPYs."
          else
            local count=$(echo "$copies" | wc -l)
            echo "Total COPYs: $count"
            echo "Lista de COPYs:"
            echo "$copies"
          fi
          echo ""
        }

        # Buscar archivos COBOL y procesarlos
        find . -type f \( -name "*.cbl" -o -name "*.cob" -o -name "*.CBL" \) ! -path "./line-counts/*" ! -path "./.git/*" | while read -r file; do
          if [ -f "$file" ]; then
            filename=$(basename "$file")
            output_file="line-counts/${filename}.txt"

            echo "Procesando: $file"
            count_lines "$file" > "$output_file"
            count_cobol_sections "$file" >> "$output_file"
            count_copys "$file" >> "$output_file"

            echo "📊 Archivo procesado: $file"
            cat "$output_file"
            echo "---"
          fi
        done

    - name: Listar archivos generados
      run: |
        echo "📁 Archivos generados:"
        ls -la line-counts/
        echo ""
        echo "📊 Contenido de los archivos:"
        cat line-counts/*.txt

    - name: Subir resultados como artefacto
      uses: actions/upload-artifact@v4
      with:
        name: estadisticas-cobol
        path: line-counts/
        retention-days: 30
