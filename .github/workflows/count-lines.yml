name: An치lisis COBOL

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  analizar-cobol:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout del c칩digo
      uses: actions/checkout@v4

    - name: Analizar archivos COBOL
      run: |
        #!/bin/bash

        mkdir -p line-counts

        # Funci칩n para contar l칤neas por divisi칩n y sub-secci칩n COBOL
        count_cobol_sections() {
          local file="$1"

          awk '
            BEGIN {
              division = ""
              subsection = ""
              id = env = data = proc = 0
              ws = file_sec = linkage = 0
            }
            {
              # Normalizar: may칰sculas y quitar espacios/tabs iniciales
              line = toupper($0)
              sub(/^[ \t]+/, "", line)

              # Detectar divisiones principales (permitiendo punto final)
              if (line ~ /^IDENTIFICATION DIVISION\.?/) { division = "ID"; subsection = ""; next }
              if (line ~ /^ENVIRONMENT DIVISION\.?/)    { division = "ENV"; subsection = ""; next }
              if (line ~ /^DATA DIVISION\.?/)           { division = "DATA"; subsection = ""; next }
              if (line ~ /^PROCEDURE DIVISION\.?/)      { division = "PROC"; subsection = ""; next }

              # Detectar sub-secciones dentro de DATA DIVISION
              if (division == "DATA") {
                if (line ~ /^WORKING-STORAGE SECTION\.?/) { subsection = "WS"; next }
                if (line ~ /^FILE SECTION\.?/)            { subsection = "FILE"; next }
                if (line ~ /^LINKAGE SECTION\.?/)         { subsection = "LINKAGE"; next }
              }

              # Contar l칤neas por divisi칩n
              if (division == "ID")   { id++ }
              else if (division == "ENV")  { env++ }
              else if (division == "DATA") { 
                data++
                # Contar tambi칠n por sub-secci칩n
                if (subsection == "WS")      { ws++ }
                else if (subsection == "FILE")    { file_sec++ }
                else if (subsection == "LINKAGE") { linkage++ }
              }
              else if (division == "PROC") { proc++ }
            }
            END {
              print "=== SECCIONES DE " FILENAME " ==="
              print "IDENTIFICATION DIVISION: " id " l칤neas"
              print "ENVIRONMENT DIVISION: " env " l칤neas"
              print "DATA DIVISION: " data " l칤neas"
              print "  - WORKING-STORAGE SECTION: " ws " l칤neas"
              print "  - FILE SECTION: " file_sec " l칤neas"
              print "  - LINKAGE SECTION: " linkage " l칤neas"
              print "PROCEDURE DIVISION: " proc " l칤neas"
              print ""
            }
          ' "$file"
        }

        # Funci칩n para contar l칤neas generales
        count_lines() {
          local file="$1"
          local total_lines=$(wc -l < "$file")
          local blank_lines=$(grep -c '^\s*$' "$file")
          local comment_lines=$(grep -c '^......\*' "$file")
          local code_lines=$((total_lines - blank_lines - comment_lines))

          echo "=== ESTAD칈STICAS DE $file ==="
          echo "L칤neas totales: $total_lines"
          echo "L칤neas de c칩digo: $code_lines"
          echo "L칤neas en blanco: $blank_lines"
          echo "L칤neas de comentarios: $comment_lines"
          echo "Fecha de an치lisis: $(date)"
          echo ""
        }

        # Buscar archivos COBOL y procesarlos
        find . -type f \( -name "*.cbl" -o -name "*.cob" -o -name "*.CBL" \) ! -path "./line-counts/*" ! -path "./.git/*" | while read -r file; do
          if [ -f "$file" ]; then
            filename=$(basename "$file")
            output_file="line-counts/${filename}.txt"

            echo "Procesando: $file"
            count_lines "$file" > "$output_file"
            count_cobol_sections "$file" >> "$output_file"

            echo "游늵 Archivo procesado: $file"
            cat "$output_file"
            echo "---"
          fi
        done

    - name: Listar archivos generados
      run: |
        echo "游늬 Archivos generados:"
        ls -la line-counts/
        echo ""
        echo "游늵 Contenido de los archivos:"
        cat line-counts/*.txt

    - name: Subir resultados como artefacto
      uses: actions/upload-artifact@v4
      with:
        name: estadisticas-cobol
        path: line-counts/
        retention-days: 30